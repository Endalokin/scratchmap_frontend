/* Import of fonts */

@font-face {
  font-family: Fredericka;
  src: url(./fonts/Fredericka_the_Great/FrederickatheGreat-Regular.ttf);
}

@font-face {
  font-family: Laila;
  src: url(./fonts/Laila/Laila-Medium.ttf);
}
@font-face {
  font-family: Permanent-Marker;
  src: url(./fonts/Permanent_Marker/PermanentMarker-Regular.ttf);
}

/*General settings */

/* Light Mode */
:root {
  --primary-bg-color: #ffebd1;
  --secondary-bg-color: #9c4324;
  --primary-color: black;
  --secondary-color: #ffebd1;
  --highlight-one: #7d9eb4;
  --highlight-two: #4a9470;
  --opposite-color: #032236;
  --btn: white;
}

/* Dark Mode */
.dark {
  --primary-bg-color: #032236;
  --secondary-bg-color: #803015;
  --primary-color: #d4a66a;
  --secondary-color: #d4a66a;
  --highlight-one: #d4a66a;
  --highlight-two: #196d45;
  --opposite-color: #ffebd1;
  --btn: white;
}

body {
  background-color: var(--primary-bg-color);
  color: var(--primary-color);
  font-family: Laila;
  margin: 0;
  font-size: 24px;
}

main {
  margin: 0px 0px 50px 0px;
}

h1,
h2,
h3 {
  font-family: Fredericka;
}

h1 {
  background-color: white;
  color: var(--secondary-bg-color);
  padding: 0.5rem 0.5rem 2rem 0.5rem;
  font-size: 3rem;
}

h2 {
  font-size: 2rem;
}

.edding {
  font-style: italic;
  font-family: Permanent-Marker;
  color: var(--highlight-one);
  letter-spacing: 0.4rem;
  word-spacing: 0.4rem;
}

.flex-between {
  display: flex;
  justify-content: space-between;
}

a {
  color: var(--primary-color);
  text-decoration: none;
  padding: 5px;
}

a:hover:not(:has(button)) {
  background-color: var(--highlight-one);
  border: none;
  color: var(--btn);
  font-size: inherit;
  cursor: pointer;
}

button {
  background-color: var(--highlight-one);
  border: none;
  color: var(--btn);
  font-size: inherit;
  margin: 1rem;
  cursor: pointer;
}

.fixed-site {
  margin: 0px 5vw;
}

.centered-element {
  text-align: center;
  padding: 20px;
}

form > * {
  margin: 15px;
}

.input-fields {
  display: flex;
  justify-content: space-around;
}

input {
  padding: 5px;
  border: none;
  box-shadow: 0 0.2rem 1.2rem rgba(0, 0, 0, 0.2);
  margin: 10px;
}

select {
  background-color: white;
  padding: 5px;
  border: none;
  box-shadow: 0 0.2rem 1.2rem rgba(0, 0, 0, 0.2);
  margin: 10px;
}

#input-roundtrip {
  line-height: 20px;
}

label {
  display: block;
}

/* Footer */

.fine-print {
  font-size: smaller;
}

footer {
  display: flex;
  justify-content: space-between;
  text-align: center;
  font-size: smaller;
  position: fixed;
  padding: 15px 15px;
  width: calc(100% - 30px);
  bottom: 0px;
  background-color: var(--primary-bg-color);
  border-top: 2px dotted var(--secondary-bg-color);
}

/* Header */

html,
body {
  margin: 0;
  height: 100%;
}

header {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  color: var(--primary-color);
  height: 50px;
  padding: 1em;
  z-index: 10;
  box-sizing: border-box;
}

menu {
  display: flex;
  flex-direction: row;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

menu > a {
  margin: 0 1rem;
  overflow: hidden;
}

.menu-button-container {
  display: none;
  height: 100%;
  width: 30px;
  cursor: pointer;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#menu-toggle {
  display: none;
}

.menu-button,
.menu-button::before,
.menu-button::after {
  display: block;
  background-color: var(--primary-color);
  position: absolute;
  height: 4px;
  width: 30px;
  transition: transform 400ms cubic-bezier(0.23, 1, 0.32, 1);
  border-radius: 2px;
}

.menu-button::before {
  content: "";
  margin-top: -8px;
}

.menu-button::after {
  content: "";
  margin-top: 8px;
}

#menu-toggle:checked + .menu-button-container .menu-button::before {
  margin-top: 0px;
  transform: rotate(405deg);
}

#menu-toggle:checked + .menu-button-container .menu-button {
  background: var(--primary-bg-color);
}

#menu-toggle:checked + .menu-button-container .menu-button::after {
  margin-top: 0px;
  transform: rotate(-405deg);
}

.notching {
  padding: 1px 45px;
  background: linear-gradient(135deg, transparent 10px, var(--highlight-one) 0)
      top left,
    linear-gradient(-135deg, transparent 10px, var(--highlight-one) 0) top right,
    linear-gradient(-45deg, transparent 10px, var(--highlight-one) 0) bottom
      right,
    linear-gradient(45deg, transparent 10px, var(--highlight-one) 0) bottom left;
  background-repeat: no-repeat;
  clip-path: polygon(
    15px 0,
    calc(100% - 15px) 0,
    101% 15px,
    100% calc(100% - 15px),
    calc(100% - 15px) 100%,
    15px 100%,
    0 calc(100% - 15px),
    -1% 15px
  );
}

.rotating {
  animation: rotation 4s infinite linear;
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.loader {
  width: 100%;
  height: 10px;
  transform: skewX(-45deg);
  background: linear-gradient(var(--secondary-bg-color) 0 0) left -30px top 0/30px
    20px no-repeat #ccc;
  animation: l3 10s infinite linear;
}

@keyframes l3 {
  100% {
    background-position: right -30px top 0;
  }
}

.vertical-scroll-80 {
  overflow: auto;
  max-height: calc(70vh - 2rem);
}

.vertical-scroll-80::-webkit-scrollbar {
  width: 8px;
}

.vertical-scroll-80::-webkit-scrollbar-track {
  border-radius: 8px;
  background-color: #e7e7e7;
  border: 1px solid #cacaca;
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
}

.vertical-scroll-80::-webkit-scrollbar-thumb {
  border-radius: 8px;
  background-color: var(--highlight-one);
}

/* About Page */

#about {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#about > * {
  width: 70%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin: 25px 50px;
  padding: 50px 15%;
}

#title {
  background-image: url("./pexels-andrea-piacquadio-3769138.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

.grid-3 {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  text-align: center;
  align-items: center;
  gap: 20px;
}

.polaroid {
  background: #fff;
  padding: 0.5rem !important;
  box-shadow: 0 0.2rem 1.2rem rgba(0, 0, 0, 0.2);
  filter: grayscale(100%);
  max-height: calc(70vh - 3rem);
  max-width: 80vw;
}

.polaroid > img {
  max-height: 50vh;
  max-width: 80vw;
}

.polaroid:hover {
  filter: grayscale(0%);
}

.polaroid-big {
  filter: grayscale(0%);
  padding: 0.5rem;
}

.polaroid-1,
.polaroid-2,
.polaroid-3 {
  max-height: 30vh;
  max-width: 10vw;
  margin: auto;
}

.polaroid-1 > img,
.polaroid-2 > img,
.polaroid-3 > img {
  max-width: 70%;
  max-height: 70%;
  height: auto;
  transition: 0.7s;
}

.polaroid-1 {
  animation: shake-1 2.2s ease-in;
  animation-timeline: initial;
  rotate: -5deg;
}

.polaroid-2 {
  animation: shake-2 1.8s ease-in;
  animation-timeline: initial;
  rotate: 5deg;
}

.polaroid-3 {
  animation: shake-3 1.6s ease-in;
  animation-timeline: initial;
  rotate: 0;
}

@keyframes shake-1 {
  0% {
    transform: rotate(-10deg) scale(1.5) translateX(10px);
    opacity: 0;
  }
  40% {
    transform: scale(1) translateX(0px);
    opacity: 1;
  }
}

@keyframes shake-2 {
  0% {
    transform: rotate(-10deg) scale(1.5) translateX(-10px);
    opacity: 0;
  }
  40% {
    transform: scale(1) translateX(0px);
    opacity: 1;
  }
}

@keyframes shake-3 {
  0% {
    transform: rotate(10deg) scale(1.5);
    opacity: 0;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

#teaser-map {
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
}

#teaser-footprint {
  width: calc(70% - 50px);
  flex-direction: column;
  align-items: center;
  border: 2px dashed var(--highlight-two);
}

#teaser-single {
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
  background-color: #9c4324;
  color: var(--secondary-color);
  overflow-y: clip;
}

#animated-img {
  animation: slide-in 1ms ease-in;
  animation-timeline: view();
}

@keyframes slide-in {
  0% {
    transform: translateX(50rem) translateY(-20rem) rotate(-0.25turn);
  }
  40% {
    transform: translateX(0) translateY(0) rotate(0);
  }
}

#teaser-all {
  flex-direction: column;
  align-items: center;
}

/* Map Page */

.map {
  height: calc(100vh - 100px);
  z-index: 0 !important;
}

.leaflet-interactive:hover {
  transition: all 0.5s;
  box-shadow: 0 0.2rem 1.2rem rgba(0, 0, 0, 0.2);
  transform: skew(-2deg);
}

.modal {
  justify-content: space-evenly;
  flex-direction: column;
  background-color: var(--primary-bg-color);
  position: absolute;
  z-index: 10;
  border: 2px dashed var(--highlight-one);
  padding: 20px;
  box-shadow: 0 0.2rem 1.2rem rgba(0, 0, 0, 0.2);
  text-align: center;
}

.modal-back {
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgba(148, 147, 147, 0.4);
}

#compensationModal,
#loginModal {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

#mapFilterSection {
  right: 2px;
  border: 2px dashed var(--highlight-one);
}

#mapFilterSection > * {
  margin: auto;
}

.display-none {
  display: none;
}
.display-flex {
  display: flex;
}

.checkbox-season {
  display: none;
}

.label-season {
  display: inline-block;
  width: 75px;
  height: 75px;
  text-align: center;
  line-height: 75px;
  font-size: 2em;
  cursor: pointer;
  overflow: visible;
}

.label-clock {
  display: inline-block;
  width: 50px;
  cursor: pointer;
}

#clock-filter {
  gap: 0px;
  overflow: visible;
  grid-auto-rows: 50px;
  align-items: center;
}

#season-filter,
#clock-filter {
  border: 2px dashed var(--highlight-two);
}

#season-winter:checked ~ label[for="season-winter"],
#season-spring:checked ~ label[for="season-spring"],
#season-summer:checked ~ label[for="season-summer"],
#season-autumn:checked ~ label[for="season-autumn"] {
  background: var(--highlight-two);
  color: #fff;
}

#clock-filter > div > input:checked ~ label {
  color: var(--opposite-color);
  font-weight: bold;
}

#clock-night:checked ~ label[for="clock-night"]::before {
  content: "";
  position: absolute;
  top: 100%;
  right: 17.5px;
  width: 35px;
  height: 35px;
  background: url("https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Sun.svg/35px-Sun.svg.png")
    no-repeat top left;
}

#clock-morning:checked ~ label[for="clock-morning"]::before {
  content: "";
  position: absolute;
  top: -8.5px;
  right: 0;
  right: 35px;
  width: 35px;
  height: 35px;
  background: url("https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Sun.svg/35px-Sun.svg.png")
    no-repeat top left;
}

#clock-midday:checked ~ label[for="clock-midday"]::before {
  content: "";
  position: absolute;
  top: -135%;
  right: 0;
  width: 35px;
  height: 35px;
  padding-right: 1em;
  background: url("https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Sun.svg/35px-Sun.svg.png")
    no-repeat top left;
}
#clock-evening:checked ~ label[for="clock-evening"]::before {
  content: "";
  position: absolute;
  top: -8.25px;
  right: -8.25px;
  width: 35px;
  height: 35px;
  background: url("https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Sun.svg/35px-Sun.svg.png")
    no-repeat top left;
}

/* Tooltip container */
.tooltip {
  position: relative;
  display: inline-block;
}

/* Tooltip text */
.tooltip .tooltiptext {
  visibility: hidden;
  background-color: var(--opposite-color);
  color: var(--primary-bg-color);
  text-align: center;
  padding: 5px 5px;
  border-radius: 6px;
  font-size: smaller;
  position: absolute;
  bottom: 100%;
  left: 0%;
  z-index: 1;
}

.tooltip .tooltiptext::after {
  content: " ";
  position: absolute;
  top: 100%; /* At the bottom of the tooltip */
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: var(--opposite-color) transparent transparent transparent;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
}

/* Footprint page */

th {
  background-color: var(--highlight-two);
}

table {
  width: calc(100% - 8px);
  padding: 20px 0px;
  margin: auto;
  animation: showUp 0.25s ease-out;
}

.showUp {
  animation: showUp 0.25s ease-out;
}

@keyframes showUp {
  from {
    transform: scale(1, 0.4) translateY(calc(100% * 0.4));
  }
  to {
    transform: scale(1, 1) translateY(0px);
  }
}

td,
th {
  padding: 10px;
}

tbody > tr:hover {
  box-shadow: 0 0.2rem 1.2rem rgba(0, 0, 0, 0.2);
  transform: translateX(5px);
}

tbody > tr {
  transition: all 0.5s;
}

tbody > tr:nth-child(even) {
  background-color: rgba(81, 148, 112, 0.4);
}

#footprint-comparison-chart {
  min-height: 250px;
}

.drop-shadow {
  filter: drop-shadow(0px -6px 6px var(--secondary-color));
}

/* Trip Detail Page */

#single-details {
  margin: 25px 50px;
  border: 2px dashed var(--highlight-one);
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
  padding: 50px 50px;
  align-items: start;
}

@media only screen and (max-width: 1600px) {
  .fixed-site {
    margin: 0px 0.5vw;
  }
  body {
  font-size: 18px;
  }
  .notching {
    padding: 4px 45px;
  }
}

@media only screen and (max-width: 880px) {
  .hide-xs {
    display: none;
  }
  .polaroid-1,
  .polaroid-2,
  .polaroid-3 {
    max-width: 20vw;
  }
  .img-gallery {
    rotate: 270deg;
  }

  #single-details {
    margin: 25px 15px;
    border: 2px dashed var(--highlight-one);
    padding: 15px 15px;
  }

  .menu-button-container {
    display: flex;
  }
  menu {
    position: absolute;
    top: 0;
    margin-top: 50px;
    left: 0;
    flex-direction: column;
    width: 100%;
    justify-content: center;
    align-items: center;
    z-index: 20;
  }
  #menu-toggle ~ menu a {
    height: 0;
    margin: 0;
    padding: 0;
    border: 0;
    transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);
  }
  #menu-toggle:checked ~ menu a {
    border: 1px solid var(--primary-bg-color);
    height: 2.5em;
    padding: 0.5em;
    transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);
  }
  menu > a {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0;
    padding: 0.5em 0;
    width: 100%;
    background-color: var(--highlight-one);
  }
  menu > a:not(:last-child) {
    border-bottom: 1px solid var(--primary-bg-color);
  }
}

.ribbon {
  line-height: 1.8;
  margin: 0px;
  background-color: grey;
}

.ribbon:hover {
  background-color: var(--primary-color);
}

.ribbon-last {
  --f: 0.5em; /* control the folded part*/
  --r: 0.8em; /* control the ribbon shape */
  border-bottom: var(--f) solid #0005;
  border-left: var(--r) solid #0000;
  clip-path: polygon(
    0 0,
    100% 0,
    100% calc(100% - var(--f)),
    calc(100% - var(--f)) 100%,
    calc(100% - var(--f)) calc(100% - var(--f)),
    0 calc(100% - var(--f)),
    var(--r) calc(50% - var(--f) / 2)
  );
  position: relative;
  right: 0.5em;
}

.ribbon-middle {
  color: #fff;
  --s: 0.5em; /* the ribbon size */
  --c: 0.8em; /* the cutout part */
  padding: 0 var(--c) 0 calc(var(--s) * 2 + 0.5em);
  clip-path: polygon(
    calc(100% - var(--c)) 0,
    var(--s) 0,
    calc(var(--s) * 2) calc(50%),
    var(--s) 100%,
    calc(100% - var(--c)) 100%,
    100% calc(50%)
  );
  width: fit-content;
  position: relative;
  right: 0.4em;
}

.ribbon-active {
  background-color: var(--highlight-two);
}

.ribbon-first {
  --f: 0.5em; /* control the folded part*/
  --r: 0.5em; /* control the ribbon shape */
  padding-inline: 0.25em;
  line-height: 1.8;
  border-bottom: var(--f) solid #0005;
  border-right: var(--r) solid #0000;
  clip-path: polygon(
    calc(100% - var(--r)) 0,
    0 0,
    0 calc(100% - var(--f)),
    var(--f) 100%,
    var(--f) calc(100% - var(--f)),
    calc(100% - var(--r)) calc(100% - var(--f)),
    100% calc(50% - var(--f) / 2)
  );
}

.ribbon-small {
  --f: 0.5em; /* control the folded part*/
  --r: 0.8em; /* control the ribbon shape */
  position: absolute;
  top: 15vh;
  z-index: 10;
  right: calc(0.5em + 0.5vw);
  border-bottom: var(--f) solid #0005;
  border-left: var(--r) solid #0000;
  clip-path: polygon(
    0 0,
    100% 0,
    100% calc(100% - var(--f)),
    calc(100% - var(--f)) 100%,
    calc(100% - var(--f)) calc(100% - var(--f)),
    0 calc(100% - var(--f)),
    var(--r) calc(50% - var(--f) / 2)
  );
}

.ribbon-secondary {
  --r: 0.8em; /* control the ribbon shape */
  padding-inline: calc(var(--r) + 0.3em);
  clip-path: polygon(
    0 0,
    100% 0,
    calc(100% - var(--r)) 50%,
    100% 100%,
    0 100%,
    var(--r) 50%
  );
  background: grey;
  width: fit-content;
  color: var(--btn)
}
